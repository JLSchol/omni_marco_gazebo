<launch>
    <!--This will be used as base name in tftree-->
    <arg name="output_topic_position"          default="/omni1_lock_state"/> 
    <arg name="output_topic_button"          default="/omni1_button"/> 

    <!--Seperate lists by comma and in between brackets (e.g. [5.0, 4.3])!!-->
    <!--amplitude of omni around lockposition-->
    <arg name="amplitudes"            default="[0.15, 0.30]" />   <!--"[0.04, 0.08, 0.12]"-->
    <!--oscillation per second of time-->
    <arg name="frequencies"            default="[0.5, 1]" />    <!--"[1, 2, 4]"-->
    <!--amount of oscillations-->  
    <arg name="periods"            default="[2, 4]" />          <!---"[2, 4, 8]"-->
    <!---time of sinusoid = 1/f * periods-->
    
    <!-- set angle_xy to 90 to wiggle y-axis (omni) -->
    <!-- set angle_xy to zero to make circles WERKT NIET--> 
    <!-- set angle_xy in deg to make of diagonal wiggles --> 
    <arg name="angle_xy"            default="50" /> 


    <node name="mock_omni_position" pkg="test_common" type="MockOmniPosition.py" output="screen">

        <param name="OutputTopicPosition"     value="$(arg output_topic_position)"/>
        <param name="OutputTopicButton"     value="$(arg output_topic_button)"/>

        <rosparam param="amplitudes" subst_value="True">$(arg amplitudes)</rosparam>
        <rosparam param="frequencies" subst_value="True">$(arg frequencies)</rosparam>
        <rosparam param="periods" subst_value="True">$(arg periods)</rosparam>

        <param name="angle_xy"     value="$(arg angle_xy)"/>    

    </node>


</launch>
